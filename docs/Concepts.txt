minor misc TODO:
	"translate" in the Cartesian vector class is technically just "add" and should be renamed accordingly?
	re-implement "rotate-about" using a transformation matrix? (concatenate them right-to-left?)
	think about other places transformation matrices might be useful.
	
	consider making polygon no longer extend path (privatise its points or something)
	consider figuring out how to apply a transformation directly to the width and height values, rather than re-calculating them.
	consider moving the getOverflowDistance function to the Path class.
	
	find out if static data can be non-final in Java (it can in c++) and consider this as a way to generate unique IDs for entities, (incrementing the static data on creation), although getting the object's hashcode might suitable (check if the hash is guaranteed to be unique).
		
||Misc entities and mechanics notes||
TODO:
	move collision-reaction determination etc to the engine?
		Prevent duplication of entity reactions caused by references to each other.
	revisit integer velocity usage, inconsistency in speed is too high?

||NOTE||

perhaps use matrices for Polygons, not just vectors? 

to check if the polygon is convex (we need this for the collision hitbox), I'm pretty sure, if for any set of 3 points that are connected, the middle point lies "outside" of a line between it's two neighbours, it's convex, all I need to do is work out how todefine "outside"
	there might be a better way to do it using matrices though

||Dealing with Collisions||

http://gamedevelopment.tutsplus.com/tutorials/quick-tip-use-quadtrees-to-detect-likely-collisions-in-2d-space--gamedev-374

use a combo of rectangular hitboxes and quadtrees for the broad phase, and later Separating Axis Theorem for the narrow phase

An article on ridged body collision physics:
http://gamedevelopment.tutsplus.com/tutorials/how-to-create-a-custom-2d-physics-engine-oriented-rigid-bodies--gamedev-8032






